/*
 * generated by Xtext 2.25.0
 */
package br.ufes.mdd.umltextual.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class UmlTextualGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.mdd.umltextual.UmlTextual.Model");
		private final Assignment cPackagesAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cPackagesPackageParserRuleCall_0 = (RuleCall)cPackagesAssignment.eContents().get(0);
		
		//Model:
		//    packages+=Package*
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//packages+=Package*
		public Assignment getPackagesAssignment() { return cPackagesAssignment; }
		
		//Package
		public RuleCall getPackagesPackageParserRuleCall_0() { return cPackagesPackageParserRuleCall_0; }
	}
	public class PackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.mdd.umltextual.UmlTextual.Package");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cTypeAlternatives_0_0 = (Alternatives)cTypeAssignment_0.eContents().get(0);
		private final Keyword cTypePackageKeyword_0_0_0 = (Keyword)cTypeAlternatives_0_0.eContents().get(0);
		private final Keyword cTypeSubsystemKeyword_0_0_1 = (Keyword)cTypeAlternatives_0_0.eContents().get(1);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cClassesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cClassesClassParserRuleCall_3_0 = (RuleCall)cClassesAssignment_3.eContents().get(0);
		private final Assignment cAssociationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAssociationsAssociationConnectorParserRuleCall_4_0 = (RuleCall)cAssociationsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Package:
		//    type=('package' | 'subsystem') name=ID '{'
		//    classes+=Class*
		//    associations+=AssociationConnector*
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//type=('package' | 'subsystem') name=ID '{'
		//classes+=Class*
		//associations+=AssociationConnector*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//type=('package' | 'subsystem')
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//('package' | 'subsystem')
		public Alternatives getTypeAlternatives_0_0() { return cTypeAlternatives_0_0; }
		
		//'package'
		public Keyword getTypePackageKeyword_0_0_0() { return cTypePackageKeyword_0_0_0; }
		
		//'subsystem'
		public Keyword getTypeSubsystemKeyword_0_0_1() { return cTypeSubsystemKeyword_0_0_1; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//classes+=Class*
		public Assignment getClassesAssignment_3() { return cClassesAssignment_3; }
		
		//Class
		public RuleCall getClassesClassParserRuleCall_3_0() { return cClassesClassParserRuleCall_3_0; }
		
		//associations+=AssociationConnector*
		public Assignment getAssociationsAssignment_4() { return cAssociationsAssignment_4; }
		
		//AssociationConnector
		public RuleCall getAssociationsAssociationConnectorParserRuleCall_4_0() { return cAssociationsAssociationConnectorParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.mdd.umltextual.UmlTextual.Class");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cStereotypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cStereotypeIDTerminalRuleCall_0_1_0 = (RuleCall)cStereotypeAssignment_0_1.eContents().get(0);
		private final Assignment cVisibilityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVisibilityVisibilityParserRuleCall_1_0 = (RuleCall)cVisibilityAssignment_1.eContents().get(0);
		private final Keyword cClassKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cExtendsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParentClassAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParentClassClassParserRuleCall_4_1_0 = (RuleCall)cParentClassAssignment_4_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAttributesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAttributesAttributeParserRuleCall_6_0 = (RuleCall)cAttributesAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		////Subsystem:
		////    'subsystem' name=ID '{'
		////    classes+=Class*
		////    '}'
		////;
		//Class:
		//    ('@'stereotype=ID)?
		//    visibility=Visibility? 'class' name=ID ('extends' parentClass=Class)? '{'
		//    attributes+=Attribute*
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('@'stereotype=ID)?
		//visibility=Visibility? 'class' name=ID ('extends' parentClass=Class)? '{'
		//attributes+=Attribute*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//('@'stereotype=ID)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0_0() { return cCommercialAtKeyword_0_0; }
		
		//stereotype=ID
		public Assignment getStereotypeAssignment_0_1() { return cStereotypeAssignment_0_1; }
		
		//ID
		public RuleCall getStereotypeIDTerminalRuleCall_0_1_0() { return cStereotypeIDTerminalRuleCall_0_1_0; }
		
		//visibility=Visibility?
		public Assignment getVisibilityAssignment_1() { return cVisibilityAssignment_1; }
		
		//Visibility
		public RuleCall getVisibilityVisibilityParserRuleCall_1_0() { return cVisibilityVisibilityParserRuleCall_1_0; }
		
		//'class'
		public Keyword getClassKeyword_2() { return cClassKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//('extends' parentClass=Class)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'extends'
		public Keyword getExtendsKeyword_4_0() { return cExtendsKeyword_4_0; }
		
		//parentClass=Class
		public Assignment getParentClassAssignment_4_1() { return cParentClassAssignment_4_1; }
		
		//Class
		public RuleCall getParentClassClassParserRuleCall_4_1_0() { return cParentClassClassParserRuleCall_4_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//attributes+=Attribute*
		public Assignment getAttributesAssignment_6() { return cAttributesAssignment_6; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_6_0() { return cAttributesAttributeParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class VisibilityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.mdd.umltextual.UmlTextual.Visibility");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPublicKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cPrivateKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//Visibility:
		//    "public" | "private"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"public" | "private"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//"public"
		public Keyword getPublicKeyword_0() { return cPublicKeyword_0; }
		
		//"private"
		public Keyword getPrivateKeyword_1() { return cPrivateKeyword_1; }
	}
	public class AttributeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.mdd.umltextual.UmlTextual.AttributeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cAttributeTypeAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Keyword cStringKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cAttributeTypeAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cIntKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cAttributeTypeAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final Keyword cDoubleKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Action cAttributeTypeAction_3_0 = (Action)cGroup_3.eContents().get(0);
		private final Keyword cBooleanKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Action cAttributeTypeAction_4_0 = (Action)cGroup_4.eContents().get(0);
		private final Keyword cByteKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Action cAttributeTypeAction_5_0 = (Action)cGroup_5.eContents().get(0);
		private final Keyword cCharKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Action cAttributeTypeAction_6_0 = (Action)cGroup_6.eContents().get(0);
		private final Keyword cFloatKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Action cAttributeTypeAction_7_0 = (Action)cGroup_7.eContents().get(0);
		private final Keyword cShortKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Action cAttributeTypeAction_8_0 = (Action)cGroup_8.eContents().get(0);
		private final Keyword cLongKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final RuleCall cDomainSpecificTypeParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		
		//AttributeType:
		//    {AttributeType} "string" | {AttributeType} "int" | {AttributeType} "double" | {AttributeType} "boolean" |
		//    {AttributeType} "byte" | {AttributeType} "char" | {AttributeType} "float" | {AttributeType} "short" |
		//    {AttributeType} "long" | DomainSpecificType
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{AttributeType} "string" | {AttributeType} "int" | {AttributeType} "double" | {AttributeType} "boolean" |
		//{AttributeType} "byte" | {AttributeType} "char" | {AttributeType} "float" | {AttributeType} "short" |
		//{AttributeType} "long" | DomainSpecificType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{AttributeType} "string"
		public Group getGroup_0() { return cGroup_0; }
		
		//{AttributeType}
		public Action getAttributeTypeAction_0_0() { return cAttributeTypeAction_0_0; }
		
		//"string"
		public Keyword getStringKeyword_0_1() { return cStringKeyword_0_1; }
		
		//{AttributeType} "int"
		public Group getGroup_1() { return cGroup_1; }
		
		//{AttributeType}
		public Action getAttributeTypeAction_1_0() { return cAttributeTypeAction_1_0; }
		
		//"int"
		public Keyword getIntKeyword_1_1() { return cIntKeyword_1_1; }
		
		//{AttributeType} "double"
		public Group getGroup_2() { return cGroup_2; }
		
		//{AttributeType}
		public Action getAttributeTypeAction_2_0() { return cAttributeTypeAction_2_0; }
		
		//"double"
		public Keyword getDoubleKeyword_2_1() { return cDoubleKeyword_2_1; }
		
		//{AttributeType} "boolean"
		public Group getGroup_3() { return cGroup_3; }
		
		//{AttributeType}
		public Action getAttributeTypeAction_3_0() { return cAttributeTypeAction_3_0; }
		
		//"boolean"
		public Keyword getBooleanKeyword_3_1() { return cBooleanKeyword_3_1; }
		
		//{AttributeType} "byte"
		public Group getGroup_4() { return cGroup_4; }
		
		//{AttributeType}
		public Action getAttributeTypeAction_4_0() { return cAttributeTypeAction_4_0; }
		
		//"byte"
		public Keyword getByteKeyword_4_1() { return cByteKeyword_4_1; }
		
		//{AttributeType} "char"
		public Group getGroup_5() { return cGroup_5; }
		
		//{AttributeType}
		public Action getAttributeTypeAction_5_0() { return cAttributeTypeAction_5_0; }
		
		//"char"
		public Keyword getCharKeyword_5_1() { return cCharKeyword_5_1; }
		
		//{AttributeType} "float"
		public Group getGroup_6() { return cGroup_6; }
		
		//{AttributeType}
		public Action getAttributeTypeAction_6_0() { return cAttributeTypeAction_6_0; }
		
		//"float"
		public Keyword getFloatKeyword_6_1() { return cFloatKeyword_6_1; }
		
		//{AttributeType} "short"
		public Group getGroup_7() { return cGroup_7; }
		
		//{AttributeType}
		public Action getAttributeTypeAction_7_0() { return cAttributeTypeAction_7_0; }
		
		//"short"
		public Keyword getShortKeyword_7_1() { return cShortKeyword_7_1; }
		
		//{AttributeType} "long"
		public Group getGroup_8() { return cGroup_8; }
		
		//{AttributeType}
		public Action getAttributeTypeAction_8_0() { return cAttributeTypeAction_8_0; }
		
		//"long"
		public Keyword getLongKeyword_8_1() { return cLongKeyword_8_1; }
		
		//DomainSpecificType
		public RuleCall getDomainSpecificTypeParserRuleCall_9() { return cDomainSpecificTypeParserRuleCall_9; }
	}
	public class DomainSpecificTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.mdd.umltextual.UmlTextual.DomainSpecificType");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//DomainSpecificType:
		//    name=ID
		//    // Lembrar de modificar para declarar no começo da classe os tipos específicos de domínio
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class MultiplicityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.mdd.umltextual.UmlTextual.Multiplicity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cDigitOneKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cDigitZeroFullStopFullStopDigitOneKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cDigitZeroFullStopFullStopAsteriskKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cAsteriskKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cDigitOneFullStopFullStopAsteriskKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		
		//Multiplicity:
		//    "1" | "0..1" | "0..*" | "*" | "1..*"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"1" | "0..1" | "0..*" | "*" | "1..*"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//"1"
		public Keyword getDigitOneKeyword_0() { return cDigitOneKeyword_0; }
		
		//"0..1"
		public Keyword getDigitZeroFullStopFullStopDigitOneKeyword_1() { return cDigitZeroFullStopFullStopDigitOneKeyword_1; }
		
		//"0..*"
		public Keyword getDigitZeroFullStopFullStopAsteriskKeyword_2() { return cDigitZeroFullStopFullStopAsteriskKeyword_2; }
		
		//"*"
		public Keyword getAsteriskKeyword_3() { return cAsteriskKeyword_3; }
		
		//"1..*"
		public Keyword getDigitOneFullStopFullStopAsteriskKeyword_4() { return cDigitOneFullStopFullStopAsteriskKeyword_4; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.mdd.umltextual.UmlTextual.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVisibilityAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cVisibilityVisibilityParserRuleCall_0_0 = (RuleCall)cVisibilityAssignment_0.eContents().get(0);
		private final Keyword cAttrKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeAttributeTypeParserRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftSquareBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMultiplicityAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMultiplicityMultiplicityParserRuleCall_5_1_0 = (RuleCall)cMultiplicityAssignment_5_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		
		//Attribute:
		//    visibility=(Visibility)? 'attr' name=ID ':' type=AttributeType ("[" multiplicity=Multiplicity "]")?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//visibility=(Visibility)? 'attr' name=ID ':' type=AttributeType ("[" multiplicity=Multiplicity "]")?
		public Group getGroup() { return cGroup; }
		
		//visibility=(Visibility)?
		public Assignment getVisibilityAssignment_0() { return cVisibilityAssignment_0; }
		
		//(Visibility)
		public RuleCall getVisibilityVisibilityParserRuleCall_0_0() { return cVisibilityVisibilityParserRuleCall_0_0; }
		
		//'attr'
		public Keyword getAttrKeyword_1() { return cAttrKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//type=AttributeType
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//AttributeType
		public RuleCall getTypeAttributeTypeParserRuleCall_4_0() { return cTypeAttributeTypeParserRuleCall_4_0; }
		
		//("[" multiplicity=Multiplicity "]")?
		public Group getGroup_5() { return cGroup_5; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword_5_0() { return cLeftSquareBracketKeyword_5_0; }
		
		//multiplicity=Multiplicity
		public Assignment getMultiplicityAssignment_5_1() { return cMultiplicityAssignment_5_1; }
		
		//Multiplicity
		public RuleCall getMultiplicityMultiplicityParserRuleCall_5_1_0() { return cMultiplicityMultiplicityParserRuleCall_5_1_0; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword_5_2() { return cRightSquareBracketKeyword_5_2; }
	}
	public class UnamedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.mdd.umltextual.UmlTextual.Unamed");
		private final Keyword cUnamedKeyword = (Keyword)rule.eContents().get(1);
		
		//// <---- Relações ---->
		//Unamed:
		//    "unamed"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"unamed"
		public Keyword getUnamedKeyword() { return cUnamedKeyword; }
	}
	public class NavigationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.mdd.umltextual.UmlTextual.Navigation");
		private final Keyword cNavigableKeyword = (Keyword)rule.eContents().get(1);
		
		//Navigation:
		//    "navigable"
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//"navigable"
		public Keyword getNavigableKeyword() { return cNavigableKeyword; }
	}
	public class AssociationConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.mdd.umltextual.UmlTextual.AssociationConnector");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAssociationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAggregationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCompositionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//AssociationConnector:
		//    Association | Aggregation | Composition
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Association | Aggregation | Composition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Association
		public RuleCall getAssociationParserRuleCall_0() { return cAssociationParserRuleCall_0; }
		
		//Aggregation
		public RuleCall getAggregationParserRuleCall_1() { return cAggregationParserRuleCall_1; }
		
		//Composition
		public RuleCall getCompositionParserRuleCall_2() { return cCompositionParserRuleCall_2; }
	}
	public class AssociationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.mdd.umltextual.UmlTextual.Association");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUndirectedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAssociationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cNameAlternatives_2_0 = (Alternatives)cNameAssignment_2.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_2_0_0 = (RuleCall)cNameAlternatives_2_0.eContents().get(0);
		private final RuleCall cNameUnamedParserRuleCall_2_0_1 = (RuleCall)cNameAlternatives_2_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cFromKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNavigation1Assignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNavigation1NavigationParserRuleCall_5_0 = (RuleCall)cNavigation1Assignment_5.eContents().get(0);
		private final Assignment cClass1Assignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cClass1ClassCrossReference_6_0 = (CrossReference)cClass1Assignment_6.eContents().get(0);
		private final RuleCall cClass1ClassIDTerminalRuleCall_6_0_1 = (RuleCall)cClass1ClassCrossReference_6_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cMultiplicity1Assignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cMultiplicity1MultiplicityParserRuleCall_8_0 = (RuleCall)cMultiplicity1Assignment_8.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cToKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cNavigation2Assignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cNavigation2NavigationParserRuleCall_11_0 = (RuleCall)cNavigation2Assignment_11.eContents().get(0);
		private final Assignment cClass2Assignment_12 = (Assignment)cGroup.eContents().get(12);
		private final CrossReference cClass2ClassCrossReference_12_0 = (CrossReference)cClass2Assignment_12.eContents().get(0);
		private final RuleCall cClass2ClassIDTerminalRuleCall_12_0_1 = (RuleCall)cClass2ClassCrossReference_12_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cMultiplicity2Assignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cMultiplicity2MultiplicityParserRuleCall_14_0 = (RuleCall)cMultiplicity2Assignment_14.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		
		//Association:
		//    'undirected'? 'association' name= (ID | Unamed) '{'
		//        'from' navigation1=Navigation?  class1=[Class]'['multiplicity1=Multiplicity ']' 'to' navigation2=Navigation?  class2=[Class]'['multiplicity2=Multiplicity ']'
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'undirected'? 'association' name= (ID | Unamed) '{'
		//    'from' navigation1=Navigation?  class1=[Class]'['multiplicity1=Multiplicity ']' 'to' navigation2=Navigation?  class2=[Class]'['multiplicity2=Multiplicity ']'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'undirected'?
		public Keyword getUndirectedKeyword_0() { return cUndirectedKeyword_0; }
		
		//'association'
		public Keyword getAssociationKeyword_1() { return cAssociationKeyword_1; }
		
		//name= (ID | Unamed)
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//(ID | Unamed)
		public Alternatives getNameAlternatives_2_0() { return cNameAlternatives_2_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0_0() { return cNameIDTerminalRuleCall_2_0_0; }
		
		//Unamed
		public RuleCall getNameUnamedParserRuleCall_2_0_1() { return cNameUnamedParserRuleCall_2_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//'from'
		public Keyword getFromKeyword_4() { return cFromKeyword_4; }
		
		//navigation1=Navigation?
		public Assignment getNavigation1Assignment_5() { return cNavigation1Assignment_5; }
		
		//Navigation
		public RuleCall getNavigation1NavigationParserRuleCall_5_0() { return cNavigation1NavigationParserRuleCall_5_0; }
		
		//class1=[Class]
		public Assignment getClass1Assignment_6() { return cClass1Assignment_6; }
		
		//[Class]
		public CrossReference getClass1ClassCrossReference_6_0() { return cClass1ClassCrossReference_6_0; }
		
		//ID
		public RuleCall getClass1ClassIDTerminalRuleCall_6_0_1() { return cClass1ClassIDTerminalRuleCall_6_0_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_7() { return cLeftSquareBracketKeyword_7; }
		
		//multiplicity1=Multiplicity
		public Assignment getMultiplicity1Assignment_8() { return cMultiplicity1Assignment_8; }
		
		//Multiplicity
		public RuleCall getMultiplicity1MultiplicityParserRuleCall_8_0() { return cMultiplicity1MultiplicityParserRuleCall_8_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_9() { return cRightSquareBracketKeyword_9; }
		
		//'to'
		public Keyword getToKeyword_10() { return cToKeyword_10; }
		
		//navigation2=Navigation?
		public Assignment getNavigation2Assignment_11() { return cNavigation2Assignment_11; }
		
		//Navigation
		public RuleCall getNavigation2NavigationParserRuleCall_11_0() { return cNavigation2NavigationParserRuleCall_11_0; }
		
		//class2=[Class]
		public Assignment getClass2Assignment_12() { return cClass2Assignment_12; }
		
		//[Class]
		public CrossReference getClass2ClassCrossReference_12_0() { return cClass2ClassCrossReference_12_0; }
		
		//ID
		public RuleCall getClass2ClassIDTerminalRuleCall_12_0_1() { return cClass2ClassIDTerminalRuleCall_12_0_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_13() { return cLeftSquareBracketKeyword_13; }
		
		//multiplicity2=Multiplicity
		public Assignment getMultiplicity2Assignment_14() { return cMultiplicity2Assignment_14; }
		
		//Multiplicity
		public RuleCall getMultiplicity2MultiplicityParserRuleCall_14_0() { return cMultiplicity2MultiplicityParserRuleCall_14_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_15() { return cRightSquareBracketKeyword_15; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
	}
	public class AggregationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.mdd.umltextual.UmlTextual.Aggregation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAggregationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cNameAlternatives_1_0 = (Alternatives)cNameAssignment_1.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_1_0_0 = (RuleCall)cNameAlternatives_1_0.eContents().get(0);
		private final RuleCall cNameUnamedParserRuleCall_1_0_1 = (RuleCall)cNameAlternatives_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cClass1Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cClass1ClassCrossReference_4_0 = (CrossReference)cClass1Assignment_4.eContents().get(0);
		private final RuleCall cClass1ClassIDTerminalRuleCall_4_0_1 = (RuleCall)cClass1ClassCrossReference_4_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMultiplicity1Assignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMultiplicity1MultiplicityParserRuleCall_6_0 = (RuleCall)cMultiplicity1Assignment_6.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cToKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cNavigationAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cNavigationNavigationParserRuleCall_9_0 = (RuleCall)cNavigationAssignment_9.eContents().get(0);
		private final Assignment cClass2Assignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cClass2ClassCrossReference_10_0 = (CrossReference)cClass2Assignment_10.eContents().get(0);
		private final RuleCall cClass2ClassIDTerminalRuleCall_10_0_1 = (RuleCall)cClass2ClassCrossReference_10_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cMultiplicity2Assignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cMultiplicity2MultiplicityParserRuleCall_12_0 = (RuleCall)cMultiplicity2Assignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Aggregation:
		//    'aggregation' name= (ID | Unamed) '{'
		//        'from' class1=[Class]'['multiplicity1=Multiplicity ']' 'to' navigation=Navigation? class2=[Class]'['multiplicity2=Multiplicity
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'aggregation' name= (ID | Unamed) '{'
		//    'from' class1=[Class]'['multiplicity1=Multiplicity ']' 'to' navigation=Navigation? class2=[Class]'['multiplicity2=Multiplicity
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'aggregation'
		public Keyword getAggregationKeyword_0() { return cAggregationKeyword_0; }
		
		//name= (ID | Unamed)
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//(ID | Unamed)
		public Alternatives getNameAlternatives_1_0() { return cNameAlternatives_1_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0_0() { return cNameIDTerminalRuleCall_1_0_0; }
		
		//Unamed
		public RuleCall getNameUnamedParserRuleCall_1_0_1() { return cNameUnamedParserRuleCall_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//class1=[Class]
		public Assignment getClass1Assignment_4() { return cClass1Assignment_4; }
		
		//[Class]
		public CrossReference getClass1ClassCrossReference_4_0() { return cClass1ClassCrossReference_4_0; }
		
		//ID
		public RuleCall getClass1ClassIDTerminalRuleCall_4_0_1() { return cClass1ClassIDTerminalRuleCall_4_0_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }
		
		//multiplicity1=Multiplicity
		public Assignment getMultiplicity1Assignment_6() { return cMultiplicity1Assignment_6; }
		
		//Multiplicity
		public RuleCall getMultiplicity1MultiplicityParserRuleCall_6_0() { return cMultiplicity1MultiplicityParserRuleCall_6_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_7() { return cRightSquareBracketKeyword_7; }
		
		//'to'
		public Keyword getToKeyword_8() { return cToKeyword_8; }
		
		//navigation=Navigation?
		public Assignment getNavigationAssignment_9() { return cNavigationAssignment_9; }
		
		//Navigation
		public RuleCall getNavigationNavigationParserRuleCall_9_0() { return cNavigationNavigationParserRuleCall_9_0; }
		
		//class2=[Class]
		public Assignment getClass2Assignment_10() { return cClass2Assignment_10; }
		
		//[Class]
		public CrossReference getClass2ClassCrossReference_10_0() { return cClass2ClassCrossReference_10_0; }
		
		//ID
		public RuleCall getClass2ClassIDTerminalRuleCall_10_0_1() { return cClass2ClassIDTerminalRuleCall_10_0_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_11() { return cLeftSquareBracketKeyword_11; }
		
		//multiplicity2=Multiplicity
		public Assignment getMultiplicity2Assignment_12() { return cMultiplicity2Assignment_12; }
		
		//Multiplicity
		public RuleCall getMultiplicity2MultiplicityParserRuleCall_12_0() { return cMultiplicity2MultiplicityParserRuleCall_12_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class CompositionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.ufes.mdd.umltextual.UmlTextual.Composition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCompositionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cNameAlternatives_1_0 = (Alternatives)cNameAssignment_1.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_1_0_0 = (RuleCall)cNameAlternatives_1_0.eContents().get(0);
		private final RuleCall cNameUnamedParserRuleCall_1_0_1 = (RuleCall)cNameAlternatives_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cClass1Assignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cClass1ClassCrossReference_4_0 = (CrossReference)cClass1Assignment_4.eContents().get(0);
		private final RuleCall cClass1ClassIDTerminalRuleCall_4_0_1 = (RuleCall)cClass1ClassCrossReference_4_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMultiplicity1Assignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMultiplicity1MultiplicityParserRuleCall_6_0 = (RuleCall)cMultiplicity1Assignment_6.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cToKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cNavigationAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cNavigationNavigationParserRuleCall_9_0 = (RuleCall)cNavigationAssignment_9.eContents().get(0);
		private final Assignment cClass2Assignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cClass2ClassCrossReference_10_0 = (CrossReference)cClass2Assignment_10.eContents().get(0);
		private final RuleCall cClass2ClassIDTerminalRuleCall_10_0_1 = (RuleCall)cClass2ClassCrossReference_10_0.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cMultiplicity2Assignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cMultiplicity2MultiplicityParserRuleCall_12_0 = (RuleCall)cMultiplicity2Assignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Composition:
		//    'composition' name= (ID | Unamed) '{'
		//        'from' class1=[Class]'['multiplicity1=Multiplicity ']' 'to' navigation=Navigation? class2=[Class]'['multiplicity2=Multiplicity
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'composition' name= (ID | Unamed) '{'
		//    'from' class1=[Class]'['multiplicity1=Multiplicity ']' 'to' navigation=Navigation? class2=[Class]'['multiplicity2=Multiplicity
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'composition'
		public Keyword getCompositionKeyword_0() { return cCompositionKeyword_0; }
		
		//name= (ID | Unamed)
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//(ID | Unamed)
		public Alternatives getNameAlternatives_1_0() { return cNameAlternatives_1_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0_0() { return cNameIDTerminalRuleCall_1_0_0; }
		
		//Unamed
		public RuleCall getNameUnamedParserRuleCall_1_0_1() { return cNameUnamedParserRuleCall_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//class1=[Class]
		public Assignment getClass1Assignment_4() { return cClass1Assignment_4; }
		
		//[Class]
		public CrossReference getClass1ClassCrossReference_4_0() { return cClass1ClassCrossReference_4_0; }
		
		//ID
		public RuleCall getClass1ClassIDTerminalRuleCall_4_0_1() { return cClass1ClassIDTerminalRuleCall_4_0_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }
		
		//multiplicity1=Multiplicity
		public Assignment getMultiplicity1Assignment_6() { return cMultiplicity1Assignment_6; }
		
		//Multiplicity
		public RuleCall getMultiplicity1MultiplicityParserRuleCall_6_0() { return cMultiplicity1MultiplicityParserRuleCall_6_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_7() { return cRightSquareBracketKeyword_7; }
		
		//'to'
		public Keyword getToKeyword_8() { return cToKeyword_8; }
		
		//navigation=Navigation?
		public Assignment getNavigationAssignment_9() { return cNavigationAssignment_9; }
		
		//Navigation
		public RuleCall getNavigationNavigationParserRuleCall_9_0() { return cNavigationNavigationParserRuleCall_9_0; }
		
		//class2=[Class]
		public Assignment getClass2Assignment_10() { return cClass2Assignment_10; }
		
		//[Class]
		public CrossReference getClass2ClassCrossReference_10_0() { return cClass2ClassCrossReference_10_0; }
		
		//ID
		public RuleCall getClass2ClassIDTerminalRuleCall_10_0_1() { return cClass2ClassIDTerminalRuleCall_10_0_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_11() { return cLeftSquareBracketKeyword_11; }
		
		//multiplicity2=Multiplicity
		public Assignment getMultiplicity2Assignment_12() { return cMultiplicity2Assignment_12; }
		
		//Multiplicity
		public RuleCall getMultiplicity2MultiplicityParserRuleCall_12_0() { return cMultiplicity2MultiplicityParserRuleCall_12_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	
	
	private final ModelElements pModel;
	private final PackageElements pPackage;
	private final ClassElements pClass;
	private final VisibilityElements pVisibility;
	private final AttributeTypeElements pAttributeType;
	private final DomainSpecificTypeElements pDomainSpecificType;
	private final MultiplicityElements pMultiplicity;
	private final AttributeElements pAttribute;
	private final UnamedElements pUnamed;
	private final NavigationElements pNavigation;
	private final AssociationConnectorElements pAssociationConnector;
	private final AssociationElements pAssociation;
	private final AggregationElements pAggregation;
	private final CompositionElements pComposition;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public UmlTextualGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pPackage = new PackageElements();
		this.pClass = new ClassElements();
		this.pVisibility = new VisibilityElements();
		this.pAttributeType = new AttributeTypeElements();
		this.pDomainSpecificType = new DomainSpecificTypeElements();
		this.pMultiplicity = new MultiplicityElements();
		this.pAttribute = new AttributeElements();
		this.pUnamed = new UnamedElements();
		this.pNavigation = new NavigationElements();
		this.pAssociationConnector = new AssociationConnectorElements();
		this.pAssociation = new AssociationElements();
		this.pAggregation = new AggregationElements();
		this.pComposition = new CompositionElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("br.ufes.mdd.umltextual.UmlTextual".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//    packages+=Package*
	//    ;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Package:
	//    type=('package' | 'subsystem') name=ID '{'
	//    classes+=Class*
	//    associations+=AssociationConnector*
	//    '}'
	//;
	public PackageElements getPackageAccess() {
		return pPackage;
	}
	
	public ParserRule getPackageRule() {
		return getPackageAccess().getRule();
	}
	
	////Subsystem:
	////    'subsystem' name=ID '{'
	////    classes+=Class*
	////    '}'
	////;
	//Class:
	//    ('@'stereotype=ID)?
	//    visibility=Visibility? 'class' name=ID ('extends' parentClass=Class)? '{'
	//    attributes+=Attribute*
	//    '}'
	//;
	public ClassElements getClassAccess() {
		return pClass;
	}
	
	public ParserRule getClassRule() {
		return getClassAccess().getRule();
	}
	
	//Visibility:
	//    "public" | "private"
	//;
	public VisibilityElements getVisibilityAccess() {
		return pVisibility;
	}
	
	public ParserRule getVisibilityRule() {
		return getVisibilityAccess().getRule();
	}
	
	//AttributeType:
	//    {AttributeType} "string" | {AttributeType} "int" | {AttributeType} "double" | {AttributeType} "boolean" |
	//    {AttributeType} "byte" | {AttributeType} "char" | {AttributeType} "float" | {AttributeType} "short" |
	//    {AttributeType} "long" | DomainSpecificType
	//;
	public AttributeTypeElements getAttributeTypeAccess() {
		return pAttributeType;
	}
	
	public ParserRule getAttributeTypeRule() {
		return getAttributeTypeAccess().getRule();
	}
	
	//DomainSpecificType:
	//    name=ID
	//    // Lembrar de modificar para declarar no começo da classe os tipos específicos de domínio
	//;
	public DomainSpecificTypeElements getDomainSpecificTypeAccess() {
		return pDomainSpecificType;
	}
	
	public ParserRule getDomainSpecificTypeRule() {
		return getDomainSpecificTypeAccess().getRule();
	}
	
	//Multiplicity:
	//    "1" | "0..1" | "0..*" | "*" | "1..*"
	//;
	public MultiplicityElements getMultiplicityAccess() {
		return pMultiplicity;
	}
	
	public ParserRule getMultiplicityRule() {
		return getMultiplicityAccess().getRule();
	}
	
	//Attribute:
	//    visibility=(Visibility)? 'attr' name=ID ':' type=AttributeType ("[" multiplicity=Multiplicity "]")?
	//;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//// <---- Relações ---->
	//Unamed:
	//    "unamed"
	//;
	public UnamedElements getUnamedAccess() {
		return pUnamed;
	}
	
	public ParserRule getUnamedRule() {
		return getUnamedAccess().getRule();
	}
	
	//Navigation:
	//    "navigable"
	//;
	public NavigationElements getNavigationAccess() {
		return pNavigation;
	}
	
	public ParserRule getNavigationRule() {
		return getNavigationAccess().getRule();
	}
	
	//AssociationConnector:
	//    Association | Aggregation | Composition
	//;
	public AssociationConnectorElements getAssociationConnectorAccess() {
		return pAssociationConnector;
	}
	
	public ParserRule getAssociationConnectorRule() {
		return getAssociationConnectorAccess().getRule();
	}
	
	//Association:
	//    'undirected'? 'association' name= (ID | Unamed) '{'
	//        'from' navigation1=Navigation?  class1=[Class]'['multiplicity1=Multiplicity ']' 'to' navigation2=Navigation?  class2=[Class]'['multiplicity2=Multiplicity ']'
	//    '}'
	//;
	public AssociationElements getAssociationAccess() {
		return pAssociation;
	}
	
	public ParserRule getAssociationRule() {
		return getAssociationAccess().getRule();
	}
	
	//Aggregation:
	//    'aggregation' name= (ID | Unamed) '{'
	//        'from' class1=[Class]'['multiplicity1=Multiplicity ']' 'to' navigation=Navigation? class2=[Class]'['multiplicity2=Multiplicity
	//    '}'
	//;
	public AggregationElements getAggregationAccess() {
		return pAggregation;
	}
	
	public ParserRule getAggregationRule() {
		return getAggregationAccess().getRule();
	}
	
	//Composition:
	//    'composition' name= (ID | Unamed) '{'
	//        'from' class1=[Class]'['multiplicity1=Multiplicity ']' 'to' navigation=Navigation? class2=[Class]'['multiplicity2=Multiplicity
	//    '}'
	//;
	public CompositionElements getCompositionAccess() {
		return pComposition;
	}
	
	public ParserRule getCompositionRule() {
		return getCompositionAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
