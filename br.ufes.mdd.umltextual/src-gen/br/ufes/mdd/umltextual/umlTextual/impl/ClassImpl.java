/**
 * generated by Xtext 2.25.0
 */
package br.ufes.mdd.umltextual.umlTextual.impl;

import br.ufes.mdd.umltextual.umlTextual.Attribute;
import br.ufes.mdd.umltextual.umlTextual.Interface;
import br.ufes.mdd.umltextual.umlTextual.Method;
import br.ufes.mdd.umltextual.umlTextual.UmlTextualPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Class</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufes.mdd.umltextual.umlTextual.impl.ClassImpl#getStereotype <em>Stereotype</em>}</li>
 *   <li>{@link br.ufes.mdd.umltextual.umlTextual.impl.ClassImpl#getVisibility <em>Visibility</em>}</li>
 *   <li>{@link br.ufes.mdd.umltextual.umlTextual.impl.ClassImpl#getParentClass <em>Parent Class</em>}</li>
 *   <li>{@link br.ufes.mdd.umltextual.umlTextual.impl.ClassImpl#getInterface <em>Interface</em>}</li>
 *   <li>{@link br.ufes.mdd.umltextual.umlTextual.impl.ClassImpl#getAttributes <em>Attributes</em>}</li>
 *   <li>{@link br.ufes.mdd.umltextual.umlTextual.impl.ClassImpl#getMethods <em>Methods</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ClassImpl extends ElementImpl implements br.ufes.mdd.umltextual.umlTextual.Class
{
  /**
   * The default value of the '{@link #getStereotype() <em>Stereotype</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStereotype()
   * @generated
   * @ordered
   */
  protected static final String STEREOTYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStereotype() <em>Stereotype</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStereotype()
   * @generated
   * @ordered
   */
  protected String stereotype = STEREOTYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getVisibility() <em>Visibility</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibility()
   * @generated
   * @ordered
   */
  protected static final String VISIBILITY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVisibility() <em>Visibility</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibility()
   * @generated
   * @ordered
   */
  protected String visibility = VISIBILITY_EDEFAULT;

  /**
   * The cached value of the '{@link #getParentClass() <em>Parent Class</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParentClass()
   * @generated
   * @ordered
   */
  protected br.ufes.mdd.umltextual.umlTextual.Class parentClass;

  /**
   * The cached value of the '{@link #getInterface() <em>Interface</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInterface()
   * @generated
   * @ordered
   */
  protected EList<Interface> interface_;

  /**
   * The cached value of the '{@link #getAttributes() <em>Attributes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttributes()
   * @generated
   * @ordered
   */
  protected EList<Attribute> attributes;

  /**
   * The cached value of the '{@link #getMethods() <em>Methods</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMethods()
   * @generated
   * @ordered
   */
  protected EList<Method> methods;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ClassImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return UmlTextualPackage.Literals.CLASS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStereotype()
  {
    return stereotype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStereotype(String newStereotype)
  {
    String oldStereotype = stereotype;
    stereotype = newStereotype;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UmlTextualPackage.CLASS__STEREOTYPE, oldStereotype, stereotype));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVisibility()
  {
    return visibility;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVisibility(String newVisibility)
  {
    String oldVisibility = visibility;
    visibility = newVisibility;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UmlTextualPackage.CLASS__VISIBILITY, oldVisibility, visibility));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public br.ufes.mdd.umltextual.umlTextual.Class getParentClass()
  {
    if (parentClass != null && parentClass.eIsProxy())
    {
      InternalEObject oldParentClass = (InternalEObject)parentClass;
      parentClass = (br.ufes.mdd.umltextual.umlTextual.Class)eResolveProxy(oldParentClass);
      if (parentClass != oldParentClass)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, UmlTextualPackage.CLASS__PARENT_CLASS, oldParentClass, parentClass));
      }
    }
    return parentClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public br.ufes.mdd.umltextual.umlTextual.Class basicGetParentClass()
  {
    return parentClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParentClass(br.ufes.mdd.umltextual.umlTextual.Class newParentClass)
  {
    br.ufes.mdd.umltextual.umlTextual.Class oldParentClass = parentClass;
    parentClass = newParentClass;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UmlTextualPackage.CLASS__PARENT_CLASS, oldParentClass, parentClass));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Interface> getInterface()
  {
    if (interface_ == null)
    {
      interface_ = new EObjectResolvingEList<Interface>(Interface.class, this, UmlTextualPackage.CLASS__INTERFACE);
    }
    return interface_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Attribute> getAttributes()
  {
    if (attributes == null)
    {
      attributes = new EObjectContainmentEList<Attribute>(Attribute.class, this, UmlTextualPackage.CLASS__ATTRIBUTES);
    }
    return attributes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Method> getMethods()
  {
    if (methods == null)
    {
      methods = new EObjectContainmentEList<Method>(Method.class, this, UmlTextualPackage.CLASS__METHODS);
    }
    return methods;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case UmlTextualPackage.CLASS__ATTRIBUTES:
        return ((InternalEList<?>)getAttributes()).basicRemove(otherEnd, msgs);
      case UmlTextualPackage.CLASS__METHODS:
        return ((InternalEList<?>)getMethods()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case UmlTextualPackage.CLASS__STEREOTYPE:
        return getStereotype();
      case UmlTextualPackage.CLASS__VISIBILITY:
        return getVisibility();
      case UmlTextualPackage.CLASS__PARENT_CLASS:
        if (resolve) return getParentClass();
        return basicGetParentClass();
      case UmlTextualPackage.CLASS__INTERFACE:
        return getInterface();
      case UmlTextualPackage.CLASS__ATTRIBUTES:
        return getAttributes();
      case UmlTextualPackage.CLASS__METHODS:
        return getMethods();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case UmlTextualPackage.CLASS__STEREOTYPE:
        setStereotype((String)newValue);
        return;
      case UmlTextualPackage.CLASS__VISIBILITY:
        setVisibility((String)newValue);
        return;
      case UmlTextualPackage.CLASS__PARENT_CLASS:
        setParentClass((br.ufes.mdd.umltextual.umlTextual.Class)newValue);
        return;
      case UmlTextualPackage.CLASS__INTERFACE:
        getInterface().clear();
        getInterface().addAll((Collection<? extends Interface>)newValue);
        return;
      case UmlTextualPackage.CLASS__ATTRIBUTES:
        getAttributes().clear();
        getAttributes().addAll((Collection<? extends Attribute>)newValue);
        return;
      case UmlTextualPackage.CLASS__METHODS:
        getMethods().clear();
        getMethods().addAll((Collection<? extends Method>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case UmlTextualPackage.CLASS__STEREOTYPE:
        setStereotype(STEREOTYPE_EDEFAULT);
        return;
      case UmlTextualPackage.CLASS__VISIBILITY:
        setVisibility(VISIBILITY_EDEFAULT);
        return;
      case UmlTextualPackage.CLASS__PARENT_CLASS:
        setParentClass((br.ufes.mdd.umltextual.umlTextual.Class)null);
        return;
      case UmlTextualPackage.CLASS__INTERFACE:
        getInterface().clear();
        return;
      case UmlTextualPackage.CLASS__ATTRIBUTES:
        getAttributes().clear();
        return;
      case UmlTextualPackage.CLASS__METHODS:
        getMethods().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case UmlTextualPackage.CLASS__STEREOTYPE:
        return STEREOTYPE_EDEFAULT == null ? stereotype != null : !STEREOTYPE_EDEFAULT.equals(stereotype);
      case UmlTextualPackage.CLASS__VISIBILITY:
        return VISIBILITY_EDEFAULT == null ? visibility != null : !VISIBILITY_EDEFAULT.equals(visibility);
      case UmlTextualPackage.CLASS__PARENT_CLASS:
        return parentClass != null;
      case UmlTextualPackage.CLASS__INTERFACE:
        return interface_ != null && !interface_.isEmpty();
      case UmlTextualPackage.CLASS__ATTRIBUTES:
        return attributes != null && !attributes.isEmpty();
      case UmlTextualPackage.CLASS__METHODS:
        return methods != null && !methods.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (stereotype: ");
    result.append(stereotype);
    result.append(", visibility: ");
    result.append(visibility);
    result.append(')');
    return result.toString();
  }

} //ClassImpl
