/**
 * generated by Xtext 2.25.0
 */
package br.ufes.mdd.umltextual.umlTextual.impl;

import br.ufes.mdd.umltextual.umlTextual.UmlTextualPackage;
import br.ufes.mdd.umltextual.umlTextual.UseCase;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Use Case</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.ufes.mdd.umltextual.umlTextual.impl.UseCaseImpl#getIncludedUseCases <em>Included Use Cases</em>}</li>
 *   <li>{@link br.ufes.mdd.umltextual.umlTextual.impl.UseCaseImpl#getExtendedUseCases <em>Extended Use Cases</em>}</li>
 *   <li>{@link br.ufes.mdd.umltextual.umlTextual.impl.UseCaseImpl#getDescription <em>Description</em>}</li>
 * </ul>
 *
 * @generated
 */
public class UseCaseImpl extends UseCaseElementImpl implements UseCase
{
  /**
   * The cached value of the '{@link #getIncludedUseCases() <em>Included Use Cases</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIncludedUseCases()
   * @generated
   * @ordered
   */
  protected EList<UseCase> includedUseCases;

  /**
   * The cached value of the '{@link #getExtendedUseCases() <em>Extended Use Cases</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExtendedUseCases()
   * @generated
   * @ordered
   */
  protected EList<UseCase> extendedUseCases;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UseCaseImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return UmlTextualPackage.Literals.USE_CASE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<UseCase> getIncludedUseCases()
  {
    if (includedUseCases == null)
    {
      includedUseCases = new EObjectResolvingEList<UseCase>(UseCase.class, this, UmlTextualPackage.USE_CASE__INCLUDED_USE_CASES);
    }
    return includedUseCases;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<UseCase> getExtendedUseCases()
  {
    if (extendedUseCases == null)
    {
      extendedUseCases = new EObjectResolvingEList<UseCase>(UseCase.class, this, UmlTextualPackage.USE_CASE__EXTENDED_USE_CASES);
    }
    return extendedUseCases;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UmlTextualPackage.USE_CASE__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case UmlTextualPackage.USE_CASE__INCLUDED_USE_CASES:
        return getIncludedUseCases();
      case UmlTextualPackage.USE_CASE__EXTENDED_USE_CASES:
        return getExtendedUseCases();
      case UmlTextualPackage.USE_CASE__DESCRIPTION:
        return getDescription();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case UmlTextualPackage.USE_CASE__INCLUDED_USE_CASES:
        getIncludedUseCases().clear();
        getIncludedUseCases().addAll((Collection<? extends UseCase>)newValue);
        return;
      case UmlTextualPackage.USE_CASE__EXTENDED_USE_CASES:
        getExtendedUseCases().clear();
        getExtendedUseCases().addAll((Collection<? extends UseCase>)newValue);
        return;
      case UmlTextualPackage.USE_CASE__DESCRIPTION:
        setDescription((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case UmlTextualPackage.USE_CASE__INCLUDED_USE_CASES:
        getIncludedUseCases().clear();
        return;
      case UmlTextualPackage.USE_CASE__EXTENDED_USE_CASES:
        getExtendedUseCases().clear();
        return;
      case UmlTextualPackage.USE_CASE__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case UmlTextualPackage.USE_CASE__INCLUDED_USE_CASES:
        return includedUseCases != null && !includedUseCases.isEmpty();
      case UmlTextualPackage.USE_CASE__EXTENDED_USE_CASES:
        return extendedUseCases != null && !extendedUseCases.isEmpty();
      case UmlTextualPackage.USE_CASE__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (description: ");
    result.append(description);
    result.append(')');
    return result.toString();
  }

} //UseCaseImpl
